#!/usr/bin/env bash
# CyberPower UPS utility.

script=$(basename "$0")
program="power_UPS"
data_file="ups_data.csv"
pwrstat_output=$(pwrstat -status)

command_check() {
  for cmd in "$@"; do
    if ! command -v "$cmd" >/dev/null 2>&1; then
      printf "%s\n" "Error: Required command "$cmd" not found. Exiting." >&2
      exit 1
    fi
done
}

data_file_check() {
  if [ ! -f "$data_file" ]; then
    whiptail --backtitle "$script" --title "$program" --msgbox "Data file '$data_file' not found. Exiting." 10 40 0
    exit 1
  fi
}

permission_check() {
  if [ "$EUID" -ne "0" ]; then
    whiptail --backtitle "$script" --title "$program" --msgbox "'sudo' privileges not detected. Exiting." 10 40 0
    exit 1
  fi
}

parse_pwrstat_output() {
  awk '
    BEGIN {
      FS = "[.]+"
      model = ""
      state = ""
      battery = ""
      runtime = ""
      load = ""
      result = ""
      event = ""
    }
    /Model Name/        { model = "Model Name:            " $2 }
    /State/             { state = "Status:                " $2 }
    /Battery Capacity/  { battery = "Battery Capacity:      " $2 }
    /Remaining Runtime/ { runtime = "Remaining Runtime:     " $2 }
    /Load/              { load = "Load:                  " $2 }
    /Test Result/       { result = "Test Result:           " $2 }
    /Last Power Event/  { event = "Last Power Event:      " $2 }
    END {
      print model
      print state
      print battery
      print runtime
      print load
      print result
      print event
    }
  ' <<< "$pwrstat_output"
}

runtime_table=$(awk -F ',' '{ printf "%-15s %-30s\n", $1, $2 }' ups_data.csv)

run_ups_test() {
  pwrstat -test >/dev/null 2>&1 &
  wait $!
  sleep 15
}

progress_bar() {
  {
    run_ups_test &
    test_pid=$!

    for ((i = 0; i <= 150; i++)); do
        sleep 0.1
        printf "%s\n" $((i * 100 / 150))
    done

    wait $test_pid
  } | whiptail --gauge "Running the UPS test. Please wait..." 10 40 0
}

parse_pwrstat_test() {
  pwrstat -status | awk -F '[.]+' '/Test Result/ { print "Test Result:            "$2 }'
}

ups_stats() {
  TERM=ansi whiptail --backtitle "$script" --title "$program" --msgbox "$(parse_pwrstat_output)" 16 64 0
}

ups_runtime() {
  TERM=ansi whiptail --backtitle "$script" --title "$program" --msgbox "$runtime_table" 30 60 0
}

ups_test() {
  TERM=ansi whiptail --backtitle "$script" --title "$program" --msgbox "$(parse_pwrstat_test)" 12 72 0
}

tui_menu() {
  TERM=ansi whiptail --backtitle "$script" --title "$program" --menu "Select an option" 12 48 4 \
  "Status" "Display current UPS status" \
  "Runtime" "Display estimated UPS runtime" \
  "Test" "Perform UPS battery check" \
  "Exit" "Quit program" 3>&1 1>&2 2>&3
}

main() {
  clear
  command_check "pwrstat" "whiptail"
  permission_check
  data_file_check

  while true; do
    choice=$(tui_menu)

    case $choice in
        Status)
            ups_stats
            ;;
        Runtime)
            ups_runtime
            ;;
        Test)
            progress_bar
            ups_test
            ;;
        Exit)
            whiptail --msgbox "Exiting." 12 40 0
            break
            ;;
        *)
            whiptail --msgbox "Invalid selection" 12 40 0
            ;;
    esac
  done
}

main "$@"
